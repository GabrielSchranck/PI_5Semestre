"""initial schema

Revision ID: 0f3debf59a06
Revises: 
Create Date: 2025-09-21 13:04:27.515856

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0f3debf59a06'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('modified', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('login', sa.String(length=50), nullable=False),
    sa.Column('senha', sa.String(length=255), nullable=False),
    sa.Column('account_type', sa.Enum('DELIVERY_MAN', 'ADMINISTRATIVE', 'BENEFITED', 'INDEFINED', name='accounttype'), nullable=False),
    sa.Column('family_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['family_id'], ['families.id'], ondelete='SET NULL', use_alter=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('login')
    )
    op.create_index('accounts_account_type_idx', 'accounts', ['account_type'], unique=False)
    op.create_index('accounts_active_idx', 'accounts', ['active'], unique=False)
    op.create_index('accounts_family_id_idx', 'accounts', ['family_id'], unique=False)
    op.create_index('accounts_login_idx', 'accounts', ['login'], unique=False)
    op.create_table('institutions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('modified', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('institutions_type', sa.Enum('ONGS', 'CHURCH', name='institutiontype'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('institutions_active_idx', 'institutions', ['active'], unique=False)
    op.create_index('institutions_name_idx', 'institutions', ['name'], unique=False)
    op.create_index('institutions_type_idx', 'institutions', ['institutions_type'], unique=False)
    op.create_table('families',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('modified', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('responsavel_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('cpf', sa.String(length=11), nullable=False),
    sa.Column('mobile', sa.String(length=15), nullable=False),
    sa.Column('family_size', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(length=300), nullable=False),
    sa.Column('number', sa.String(length=10), nullable=False),
    sa.Column('complement', sa.String(length=100), nullable=True),
    sa.Column('zipcode', sa.String(length=9), nullable=False),
    sa.Column('district', sa.String(length=100), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('state', sa.String(length=2), nullable=False),
    sa.Column('proof_address', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('monthly_income', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('situation_type', sa.Enum('PENDING', 'ACTIVE', 'INACTIVE', 'SUSPENDED', name='situationtype'), nullable=False),
    sa.CheckConstraint('family_size > 0', name='family_size_positive'),
    sa.CheckConstraint('monthly_income >= 0', name='monthly_income_positive'),
    sa.ForeignKeyConstraint(['responsavel_id'], ['accounts.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cpf')
    )
    op.create_index('families_active_idx', 'families', ['active'], unique=False)
    op.create_index('families_city_idx', 'families', ['city'], unique=False)
    op.create_index('families_cpf_idx', 'families', ['cpf'], unique=False)
    op.create_index('families_name_idx', 'families', ['name'], unique=False)
    op.create_index('families_proof_address_gin_idx', 'families', ['proof_address'], unique=False, postgresql_using='gin')
    op.create_index('families_responsavel_id_idx', 'families', ['responsavel_id'], unique=False)
    op.create_index('families_situation_type_idx', 'families', ['situation_type'], unique=False)
    op.create_table('family_authorized_accounts',
    sa.Column('family_id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('cpf', sa.String(length=11), nullable=True),
    sa.Column('kinship', sa.Enum('PAIS', 'IRMAOS', 'CONJUGE', 'OUTRO', name='kinshiptype'), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['family_id'], ['families.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('family_id', 'account_id')
    )
    op.create_index('family_auth_accounts_account_id_idx', 'family_authorized_accounts', ['account_id'], unique=False)
    op.create_index('family_auth_accounts_family_id_idx', 'family_authorized_accounts', ['family_id'], unique=False)
    op.create_table('family_closure',
    sa.Column('ancestor_id', sa.Integer(), nullable=False),
    sa.Column('descendant_id', sa.Integer(), nullable=False),
    sa.Column('depth', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ancestor_id'], ['families.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['descendant_id'], ['families.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ancestor_id', 'descendant_id')
    )
    op.create_index('family_closure_ancestor_depth_idx', 'family_closure', ['ancestor_id', 'depth'], unique=False)
    op.create_index('family_closure_ancestor_id_idx', 'family_closure', ['ancestor_id'], unique=False)
    op.create_index('family_closure_descendant_depth_idx', 'family_closure', ['descendant_id', 'depth'], unique=False)
    op.create_index('family_closure_descendant_id_idx', 'family_closure', ['descendant_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('family_closure_descendant_id_idx', table_name='family_closure')
    op.drop_index('family_closure_descendant_depth_idx', table_name='family_closure')
    op.drop_index('family_closure_ancestor_id_idx', table_name='family_closure')
    op.drop_index('family_closure_ancestor_depth_idx', table_name='family_closure')
    op.drop_table('family_closure')
    op.drop_index('family_auth_accounts_family_id_idx', table_name='family_authorized_accounts')
    op.drop_index('family_auth_accounts_account_id_idx', table_name='family_authorized_accounts')
    op.drop_table('family_authorized_accounts')
    op.drop_index('families_situation_type_idx', table_name='families')
    op.drop_index('families_responsavel_id_idx', table_name='families')
    op.drop_index('families_proof_address_gin_idx', table_name='families', postgresql_using='gin')
    op.drop_index('families_name_idx', table_name='families')
    op.drop_index('families_cpf_idx', table_name='families')
    op.drop_index('families_city_idx', table_name='families')
    op.drop_index('families_active_idx', table_name='families')
    op.drop_table('families')
    op.drop_index('institutions_type_idx', table_name='institutions')
    op.drop_index('institutions_name_idx', table_name='institutions')
    op.drop_index('institutions_active_idx', table_name='institutions')
    op.drop_table('institutions')
    op.drop_index('accounts_login_idx', table_name='accounts')
    op.drop_index('accounts_family_id_idx', table_name='accounts')
    op.drop_index('accounts_active_idx', table_name='accounts')
    op.drop_index('accounts_account_type_idx', table_name='accounts')
    op.drop_table('accounts')
    # ### end Alembic commands ###
